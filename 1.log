=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.036864 ms, achieved: 684.111 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904000000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0369 ms 684 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904e00000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904000000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904e00000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904000000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904e00000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904000000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904e00000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904000000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0287 ms, achieved: 880 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904e00000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0287 ms 880 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0328 ms, achieved: 770 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904000000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0328 ms 770 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0328 ms, achieved: 770 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904e00000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0328 ms 770 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904000000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904e00000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904000000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904e00000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904000000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0287 ms, achieved: 880 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904e00000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0287 ms 880 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904000000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904e00000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904000000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0287 ms, achieved: 880 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904e00000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0287 ms 880 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904000000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904e00000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904000000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0287 ms, achieved: 880 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904e00000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0287 ms 880 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904000000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0287 ms, achieved: 880 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904e00000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0287 ms 880 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904000000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0287 ms, achieved: 880 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904e00000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0287 ms 880 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0307 ms, achieved: 821 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904000000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0307 ms 821 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0287 ms, achieved: 880 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904e00000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0287 ms 880 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904000000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0287 ms, achieved: 880 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904e00000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0287 ms 880 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904000000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904e00000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904000000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904e00000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0307 ms, achieved: 821 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904000000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0307 ms 821 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0287 ms, achieved: 880 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904e00000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0287 ms 880 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904000000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0287 ms, achieved: 880 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904e00000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0287 ms 880 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0307 ms, achieved: 821 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904000000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0307 ms 821 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0287 ms, achieved: 880 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904e00000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0287 ms 880 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904000000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904e00000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904000000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0287 ms, achieved: 880 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904e00000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0287 ms 880 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904000000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904e00000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0307 ms, achieved: 821 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904000000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0307 ms 821 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904e00000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904000000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904e00000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904000000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904e00000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904000000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904e00000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904000000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904e00000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0307 ms, achieved: 821 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904000000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0307 ms 821 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904e00000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904000000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0287 ms, achieved: 880 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904e00000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0287 ms 880 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904000000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0276 ms, achieved: 912 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904e00000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0276 ms 912 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904000000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904e00000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904000000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0287 ms, achieved: 880 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904e00000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0287 ms 880 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0307 ms, achieved: 821 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904000000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0307 ms 821 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0287 ms, achieved: 880 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904e00000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0287 ms 880 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904000000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0287 ms, achieved: 880 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904e00000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0287 ms 880 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904000000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904e00000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904000000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0287 ms, achieved: 880 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904e00000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0287 ms 880 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904000000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0287 ms, achieved: 880 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904e00000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0287 ms 880 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904000000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0287 ms, achieved: 880 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904e00000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0287 ms 880 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904000000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0307 ms, achieved: 821 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904e00000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0307 ms 821 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904000000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0287 ms, achieved: 880 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904e00000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0287 ms 880 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904000000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904e00000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904000000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0287 ms, achieved: 880 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904e00000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0287 ms 880 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904000000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904e00000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904000000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0307 ms, achieved: 821 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904e00000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0307 ms 821 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904000000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0287 ms, achieved: 880 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904e00000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0287 ms 880 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904000000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904e00000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0287 ms, achieved: 880 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904000000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0287 ms 880 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904e00000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0287 ms, achieved: 880 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904000000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0287 ms 880 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0287 ms, achieved: 880 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904e00000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0287 ms 880 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904000000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0287 ms, achieved: 880 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904e00000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0287 ms 880 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904000000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904e00000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904000000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904e00000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0287 ms, achieved: 880 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904000000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0287 ms 880 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904e00000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904000000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904e00000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0307 ms, achieved: 821 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904000000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0307 ms 821 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0287 ms, achieved: 880 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904e00000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0287 ms 880 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904000000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0287 ms, achieved: 880 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904e00000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0287 ms 880 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0287 ms, achieved: 880 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904000000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0287 ms 880 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904e00000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904000000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904e00000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0287 ms, achieved: 880 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904000000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0287 ms 880 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904e00000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904000000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904e00000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904000000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0287 ms, achieved: 880 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904e00000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0287 ms 880 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904000000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0287 ms, achieved: 880 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904e00000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0287 ms 880 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0287 ms, achieved: 880 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904000000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0287 ms 880 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0287 ms, achieved: 880 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904e00000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0287 ms 880 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904000000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0287 ms, achieved: 880 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904e00000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0287 ms 880 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904000000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904e00000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904000000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904e00000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904000000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904e00000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904000000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904e00000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904000000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0287 ms, achieved: 880 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904e00000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0287 ms 880 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904000000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904e00000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0307 ms, achieved: 821 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904000000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0307 ms 821 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904e00000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904000000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40c800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
=================RUNNING FUSION SEGMENTS=================
kernel1 run in 0.0297 ms, achieved: 849 GB/s

Run kernel:
Inputs:
  T0_g[ iS0{i0}, iS1{i2} ], __half
  T2_g[ iS4{i7} ], __half
  T4_g[ iS6{i10} ], __half
Outputs:
  T20_g[ iS36{i0}, iS37{i2} ], __half
  T9_g[ iS14{i0}, bS15{1} ], float
  T14_g[ iS24{i0}, bS25{1} ], float

%kernel_math {
T1_l[ iS2{i0}, iS3{i2} ]
   = __half2float(T0_g[ iS0{i0}, iS1{i2} ]);
T6_l[ iS8{i0}, rS9{i2} ](Avg),
T7_l[ iS10{i0}, rS11{i2} ](Var),
T8_l[ iS12{i0}, rS13{i2} ](Count)
 = Welford ( T1_l[ iS2{i0}, iS3{i2} ](Avg), 
  allreduce = false )
T9_g[ iS14{i0}, bS15{1} ]
   = broadcast( T6_l[ iS8{i0}, rS9{i2} ] )
T10_l[ iS16{i0}, iS17{i2} ]
   = T1_l[ iS2{i0}, iS3{i2} ]
   - T9_g[ iS14{i0}, bS15{1} ];
T11_l[ iS18{i0}, bS19{1} ]
   = broadcast( T7_l[ iS10{i0}, rS11{i2} ] )
d16 = (double)(i2);
d17 = double(1) * d16;
d25 = reciprocal(d17);
T12_l[ iS20{i0}, bS21{1} ]
   = T11_l[ iS18{i0}, bS19{1} ]
   * d25;
T13_l[ iS22{i0}, bS23{1} ]
   = T12_l[ iS20{i0}, bS21{1} ]
   + double(9.9999997473787516e-06);
T14_g[ iS24{i0}, bS25{1} ]
   = rsqrtf(T13_l[ iS22{i0}, bS23{1} ]);
T15_l[ iS26{i0}, iS27{i2} ]
   = T10_l[ iS16{i0}, iS17{i2} ]
   * T14_g[ iS24{i0}, bS25{1} ];
T3_l[ iS5{i7} ]
   = __half2float(T2_g[ iS4{i7} ]);
T16_l[ bS28{1}, iS29{i7} ]
   = broadcast( T3_l[ iS5{i7} ] )
T17_l[ iS30{i0}, iS31{i2} ]
   = T15_l[ iS26{i0}, iS27{i2} ]
   * T16_l[ bS28{1}, iS29{i7} ];
T5_l[ iS7{i10} ]
   = __half2float(T4_g[ iS6{i10} ]);
T18_l[ bS32{1}, iS33{i10} ]
   = broadcast( T5_l[ iS7{i10} ] )
T19_l[ iS34{i0}, iS35{i2} ]
   = T17_l[ iS30{i0}, iS31{i2} ]
   + T18_l[ bS32{1}, iS33{i10} ];
T20_g[ iS36{i0}, iS37{i2} ]
   = __float2half(T19_l[ iS34{i0}, iS35{i2} ]);
}

With inputs:
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f991b200000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f400000
  tensor dtype: __half sizes: (12288, ) stride: (1, ) pointer: 0x7f991f406000
  tensor dtype: __half sizes: (512, 12288, ) stride: (12288, 1, ) pointer: 0x7f9904e00000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d000
  tensor dtype: float sizes: (512, 1, ) stride: (1, 1, ) pointer: 0x7f991f40d800
Compiler log: 
Compile options: --std=c++14 --gpu-architecture=sm_80 -default-device --fmad=true -DNDEBUG --ptxas-options --verbose --ptxas-options --maxrregcount=56  ; block size=384
ptxas info    : 3 bytes gmem
ptxas info    : Compiling entry function '_ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_' for 'sm_80'
ptxas info    : Function properties for _ZN11CudaCodeGen7kernel1ENS_6TensorINS_6__halfELi2EEENS0_IS1_Li1EEES3_S2_NS0_IfLi2EEES4_
ptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 56 registers, 16 bytes smem, 480 bytes cmem[0], 8 bytes cmem[2]



===== Reduction Parameters ========
Tag: Inner Persistent Heuristic.

Red On Fastest Dim
Persistent Kernel
Project Persistent Buffers
Batches per block: 4

Iteration Domain: blockIdx.x / 
Inner Reduction Domain: cross block - threadIdx.x /  pad to warp / persistent batch - 4 / vectorize / factor 8
Launch Parameters: BlockDim.x = -1, BlockDim.y = 1, BlockDim.z = -1, GridDim.x = -1, GridDim.y = -1, GridDim.z = -1, Smem Size = 0

====================================

With arguments: Launch Parameters: BlockDim.x = 384, BlockDim.y = -1, BlockDim.z = -1, GridDim.x = 512, GridDim.y = -1, GridDim.z = -1, Smem Size = 4608
kernel1 25219072 bytes/ 0.0297 ms 849 GB/s
=============FINISHED RUNNING FUSION SEGMENTS============
input_shape= 512 x 12288 
Eager Mode
Average bandwidth: 751.61 GB/s
nvfuser
Average bandwidth: 63.58 GB/s
fuser/eager= 0.08
